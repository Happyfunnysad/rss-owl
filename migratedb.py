import sqlite3
import glob
import os
from datetime import datetime
import shutil
import re
import json
import html

def load_cleanup_config(config_file: str = "config.json") -> dict:
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∞–≤–∏–ª –æ—á–∏—Å—Ç–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞"""
    try:
        with open(config_file, 'r', encoding='utf-8') as f:
            config = json.load(f)
            return config.get('text_cleanup', {})
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
        return {}

def clean_text(text: str, cleanup_config: dict) -> str:
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º"""
    try:
        remove_phrases = cleanup_config.get('remove_phrases', [])
        remove_patterns = cleanup_config.get('remove_patterns', [])

        # –£–¥–∞–ª—è–µ–º HTML —Ç–µ–≥–∏
        text = text.replace('<br>', '\n')
        text = text.replace('<br/>', '\n')
        text = text.replace('<p>', '\n')
        text = text.replace('</p>', '\n')
        text = re.sub('<[^<]+?>', '', text)
        
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º HTML —Å—É—â–Ω–æ—Å—Ç–∏
        text = html.unescape(text)
        
        # –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã
        for phrase in remove_phrases:
            text = text.replace(phrase, '')
        
        # –£–¥–∞–ª—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        for pattern in remove_patterns:
            text = re.sub(pattern, '', text)
        
        # –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        lines = [line.strip() for line in text.splitlines() if line.strip()]
        text = '\n'.join(lines)
        
        # –£–¥–∞–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        text = re.sub(r'\n\s*\n', '\n\n', text)
        
        return text.strip()
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞: {e}")
        return text

def cleanup_database(db_path: str, cleanup_config: dict):
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Ç–µ–∫—Å—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        with sqlite3.connect(db_path) as conn:
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
            cursor.execute('SELECT id, content FROM posts')
            records = cursor.fetchall()
            
            cleaned_count = 0
            total_records = len(records)
            
            for record_id, content in records:
                cleaned_text = clean_text(content, cleanup_config)
                if cleaned_text != content:
                    cursor.execute('''
                        UPDATE posts 
                        SET content = ? 
                        WHERE id = ?
                    ''', (cleaned_text, record_id))
                    cleaned_count += 1
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                if cleaned_count % 100 == 0:
                    print(f"‚ú® –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {cleaned_count}/{total_records} –∑–∞–ø–∏—Å–µ–π...")
            
            conn.commit()
            
        print(f"\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {cleaned_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

def merge_databases(output_db: str = "tg-posts.db"):
    """
    –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ .db —Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, —É–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã,
    —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ—á–∏—â–∞–µ—Ç —Ç–µ–∫—Å—Ç
    """
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–∞
    backup_dir = f"db_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    os.makedirs(backup_dir, exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ë–î —Å —Ç–∞–∫–æ–π –∂–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    with sqlite3.connect(output_db) as new_conn:
        cursor = new_conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS posts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                post_id TEXT UNIQUE,
                content TEXT,
                published_date TIMESTAMP,
                source_url TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        cursor.execute('CREATE INDEX IF NOT EXISTS idx_post_id ON posts(post_id)')
        new_conn.commit()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö .db —Ñ–∞–π–ª–æ–≤
    db_files = glob.glob("*.db")
    total_posts = 0
    merged_posts = 0
    processed_files = []

    for db_file in db_files:
        if db_file == output_db:
            continue

        print(f"\nüìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {db_file}")
        
        try:
            with sqlite3.connect(db_file) as old_conn:
                old_cursor = old_conn.cursor()
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
                old_cursor.execute('SELECT COUNT(*) FROM posts')
                file_posts = old_cursor.fetchone()[0]
                total_posts += file_posts
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {file_posts}")

                # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Å—Ç–∞—Ä–æ–π –ë–î
                old_cursor.execute('''
                    SELECT post_id, content, published_date, source_url 
                    FROM posts
                ''')
                
                # –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ –Ω–æ–≤—É—é –ë–î —Å –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
                with sqlite3.connect(output_db) as new_conn:
                    new_cursor = new_conn.cursor()
                    for row in old_cursor:
                        try:
                            new_cursor.execute('''
                                INSERT OR IGNORE INTO posts 
                                (post_id, content, published_date, source_url)
                                VALUES (?, ?, ?, ?)
                            ''', row)
                            if new_cursor.rowcount > 0:
                                merged_posts += 1
                    
                        except sqlite3.Error as e:
                            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∑–∞–ø–∏—Å–∏: {e}")
                            continue
                    
                    new_conn.commit()
            
            processed_files.append(db_file)

        except sqlite3.Error as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {db_file}: {e}")
            continue

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
    if merged_posts > 0:
        print("\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö...")
        for db_file in processed_files:
            try:
                # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
                shutil.copy2(db_file, os.path.join(backup_dir, db_file))
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª
                os.remove(db_file)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {db_file}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {db_file}: {e}")

        # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∑–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
        cleanup_config = load_cleanup_config()
        if cleanup_config:
            cleanup_database(output_db, cleanup_config)
        else:
            print("\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞")

    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\n=== –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ===")
    print(f"üìö –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(processed_files)}")
    print(f"üìù –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ö–æ–¥–Ω—ã—Ö –ë–î: {total_posts}")
    print(f"‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ –Ω–æ–≤–æ–π –ë–î: {merged_posts}")
    print(f"üîÑ –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {total_posts - merged_posts}")
    print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {output_db}")
    print(f"üì¶ –ë—ç–∫–∞–ø —Å—Ç–∞—Ä—ã—Ö –ë–î —Å–æ–∑–¥–∞–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {backup_dir}")

if __name__ == "__main__":
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç:")
    print("1. –û–±—ä–µ–¥–∏–Ω–∏—Ç –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("2. –£–¥–∞–ª–∏—Ç –∏—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è)")
    print("3. –û—á–∏—Å—Ç–∏—Ç —Ç–µ–∫—Å—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º –∏–∑ config.json")
    response = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ").lower()
    
    if response == 'y':
        merge_databases()
    else:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
